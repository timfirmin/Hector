


CREATE view [FPV].[vApplicationMusicMinutesView]
as
with intervaldates as (
select	[DistributionGroupCode],[DistributionCode],[Society],[StationID],[SysStartTime][intervalSysTime] from [FPV].[vMasterMusicMinutes]
union
select	[DistributionGroupCode],[DistributionCode],[Society],[StationID],[SysStartTime][intervalSysTime] from [FPV].[vCalculationGroupMusicMinutes]
)
,holistic as (
select	i.[DistributionGroupCode]
		,i.[DistributionCode]
		,i.[Society]
		,i.[StationID]
		,m.[ProgrammeForecast][masterProgrammeForecast]
		,m.[NonProgrammeForecast][masterNonProgrammeForecast]
		,m.[CommercialForecast][masterCommercialForecast]
		,m.[TotalInPeriodForecast][masterTotalInPeriodForecast]
		,m.[LateDataForecast][masterLateDataForecast]
		,m.[TotalForecast][masterTotalForecast]
		,m.[HighPeakPercent][masterHighPeakPercent]
		,m.[LowPeakPercent][masterLowPeakPercent]
		,m.[NonPeakPercent][masterNonPeakPercent]
		,m.[UpdateComment][masterUpdateComment]
		,m.[SysStartTime][masterSysStartTime]
		,m.[SysEndTime][masterSysEndTime]
		,m.[IsCurrent][masterIsCurrent]
		,c.[ProgrammeForecast]
		,c.[NonProgrammeForecast]
		,c.[CommercialForecast]
		,c.[TotalInPeriodForecast]
		,c.[LateDataForecast]
		,c.[TotalForecast]
		,c.[HighPeakPercent]
		,c.[LowPeakPercent]
		,c.[NonPeakPercent]
		,c.[UpdatedBy]
		,c.[UpdateComment]
		,c.[SysStartTime][calculationSysStartTime]
		,c.[SysEndTime][calculationSysEndTime]
		,c.[IsCurrent][calculationIsCurrent]
		,i.[intervalSysTime][SysStartTime]
		,coalesce(lead(i.[intervalSysTime]) over (partition by i.[DistributionGroupCode],i.[DistributionCode],i.[Society],i.[StationID] order by i.[intervalSysTime]),'31 DEC 9999')[SysEndTime]
from intervaldates i
left join [FPV].[vMasterMusicMinutes] m on m.[DistributionGroupCode]=i.[DistributionGroupCode]
										and m.[DistributionCode]=i.[DistributionCode]
										and m.[Society]=i.[Society]
										and m.[StationID]=i.[StationID]
								and i.[intervalSysTime] between m.SysStartTime and m.SysEndTime
left join [FPV].[vCalculationGroupMusicMinutes] c on c.[DistributionGroupCode]=i.[DistributionGroupCode]
										and c.[DistributionCode]=i.[DistributionCode]
										and c.[Society]=i.[Society]
										and c.[StationID]=i.[StationID]
										and i.[intervalSysTime] between c.SysStartTime and c.SysEndTime
)
,recency as (
select	[DistributionGroupCode]
		,[DistributionCode]
		,[Society]
		,[StationID]
		,[masterProgrammeForecast]
		,[masterNonProgrammeForecast]
		,[masterCommercialForecast]
		,[masterTotalInPeriodForecast]
		,[masterLateDataForecast]
		,[masterTotalForecast]
		,[masterHighPeakPercent]
		,[masterLowPeakPercent]
		,[masterNonPeakPercent]
		,[masterUpdateComment]
		,[masterSysStartTime]
		,[masterSysEndTime]
		,[masterIsCurrent]
		,[ProgrammeForecast]
		,[NonProgrammeForecast]
		,[CommercialForecast]
		,[TotalInPeriodForecast]
		,[LateDataForecast]
		,[TotalForecast]
		,[HighPeakPercent]
		,[LowPeakPercent]
		,[NonPeakPercent]
		,[UpdatedBy]
		,[UpdateComment]
		,[calculationSysStartTime]
		,[calculationSysEndTime]
		,[calculationIsCurrent]
		,[SysStartTime]
		,[SysEndTime]
		,row_number() over (partition by [DistributionGroupCode],[DistributionCode],[Society],[StationID] order by [SysEndTime] desc)[Recency]
		from holistic
)
select	[DistributionGroupCode]
		,[DistributionCode]
		,[Society]
		,[StationID]
		,[masterProgrammeForecast]
		,[masterNonProgrammeForecast]
		,[masterCommercialForecast]
		,[masterTotalInPeriodForecast]
		,[masterLateDataForecast]
		,[masterTotalForecast]
		,[masterHighPeakPercent]
		,[masterLowPeakPercent]
		,[masterNonPeakPercent]
		,FPV.udfRemoveStringCharacters([masterUpdateComment]) [masterUpdateComment]
		,[masterSysStartTime]
		,[masterSysEndTime]
		,[masterIsCurrent]
		,[ProgrammeForecast]
		,[NonProgrammeForecast]
		,[CommercialForecast]
		,[TotalInPeriodForecast]
		,[LateDataForecast]
		,[TotalForecast]
		,[HighPeakPercent]
		,[LowPeakPercent]
		,[NonPeakPercent]
		,[UpdatedBy]
		,FPV.udfRemoveStringCharacters([UpdateComment])[UpdateComment]
		,[calculationSysStartTime]
		,[calculationSysEndTime]
		,[calculationIsCurrent]
		,[SysStartTime]
		,[SysEndTime]
		,case when [Recency]=1 then [Recency] else 0 end [IsCurrent]
		from recency